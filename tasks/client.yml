---
- name: Setup Rsyslog Client
  become: yes    
  block:
    - name: Install rsyslog package
      package:
        name: rsyslog
        state: present

    - name: Configure rsyslog to forward logs to the server
      copy:
        dest: /etc/rsyslog.d/forward.conf
        content: |
          # Forward all logs to the remote Rsyslog server
          *.* @@192.168.181.133:514
          
          # Keep local copies (recommended for client backup)
          *.info;mail.none;authpriv.none;cron.none /var/log/messages
          authpriv.* /var/log/secure
          mail.* -/var/log/maillog
          cron.* /var/log/cron
          
          # Also forward to ELK stack if available
          *.* @@192.168.181.132:5000
        backup: yes
      register: rsyslog_config_result

    - name: Restart rsyslog service (using service module)
      service:
        name: rsyslog
        state: restarted
      when: rsyslog_config_result.changed

    - name: Ensure rsyslog service is enabled and started
      service:
        name: rsyslog
        state: started
        enabled: yes

    # Test connectivity to rsyslog server (fixed IP)
    - name: Test connection to rsyslog server
      wait_for:
        host: "192.168.181.133"
        port: 514
        timeout: 5
      ignore_errors: yes
      register: connection_test

    - name: Display connection test result
      debug:
        msg: "Connection to 192.168.181.133:514 - {{ 'OK' if connection_test is succeeded else 'FAILED (check server)' }}"

    # Generate test log to verify forwarding
    - name: Generate test log message
      shell: logger "Test log from client {{ ansible_hostname }} - forwarding to 192.168.181.133"
      changed_when: false

    # Generate different types of test logs
    - name: Generate various test log levels
      shell: |
        logger -p local0.info "INFO: Application started on {{ ansible_hostname }}"
        logger -p local0.warn "WARN: High memory usage on {{ ansible_hostname }}"
        logger -p local0.error "ERROR: Test error message from {{ ansible_hostname }}"
        logger -p auth.info "AUTH: User login test from {{ ansible_hostname }}"
      changed_when: false

  tags:
    - client
    - logging